//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SiemensProjectManagement.Models
{
    using System;
    using System.Collections.Generic;
    
    public partial class AssestTransfer
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public AssestTransfer()
        {
            this.ProcessLists = new HashSet<ProcessList>();
        }
    
        public int Transfer_id { get; set; }
        public Nullable<int> ProjectId { get; set; }
        public Nullable<int> AssetId { get; set; }
        public Nullable<int> AssetType_Id { get; set; }
        public Nullable<int> Responsible_UserId { get; set; }
        public string Requester_UserId { get; set; }
        public string Transfer_State { get; set; }
        public string Responsible_Comments { get; set; }
        public string Requester_Comments { get; set; }
        public Nullable<System.DateTime> CreatedDate { get; set; }
        public string CreatedBy { get; set; }
        public Nullable<System.DateTime> ModifiedDate { get; set; }
        public string ModifiedBy { get; set; }
        public Nullable<bool> IsCancelled { get; set; }
        public Nullable<bool> IsAcknowledeged { get; set; }
        public Nullable<bool> IsActive { get; set; }
    
        public virtual AssetType AssetType { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ProcessList> ProcessLists { get; set; }
        public virtual AssestTransfer AssestTransfer1 { get; set; }
        public virtual AssestTransfer AssestTransfer2 { get; set; }
        public virtual Project Project { get; set; }
        public virtual User User { get; set; }
    }
}
